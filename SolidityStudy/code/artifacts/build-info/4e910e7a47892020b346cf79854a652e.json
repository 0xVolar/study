{
	"id": "4e910e7a47892020b346cf79854a652e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"test1.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ncontract A {\r\n\r\n    function b() public pure returns (uint8, string memory){\r\n        uint8 c = 5;\r\n        string memory s = \"ssss\";\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test1.sol": {
				"A": {
					"abi": [
						{
							"inputs": [],
							"name": "b",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test1.sol\":61:204  contract A {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test1.sol\":61:204  contract A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4df7e3d0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test1.sol\":81:201  function b() public pure returns (uint8, string memory){... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap3\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"test1.sol\":115:120  uint8 */\n      0x00\n        /* \"test1.sol\":122:135  string memory */\n      0x60\n        /* \"test1.sol\":147:154  uint8 c */\n      0x00\n        /* \"test1.sol\":157:158  5 */\n      0x05\n        /* \"test1.sol\":147:158  uint8 c = 5 */\n      swap1\n      pop\n        /* \"test1.sol\":169:184  string memory s */\n      0x00\n        /* \"test1.sol\":169:193  string memory s = \"ssss\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x7373737300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"test1.sol\":136:201  {... */\n      pop\n      pop\n        /* \"test1.sol\":81:201  function b() public pure returns (uint8, string memory){... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:93   */\n    tag_9:\n        /* \"#utility.yul\":42:49   */\n      0x00\n        /* \"#utility.yul\":82:86   */\n      0xff\n        /* \"#utility.yul\":75:80   */\n      dup3\n        /* \"#utility.yul\":71:87   */\n      and\n        /* \"#utility.yul\":60:87   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:93   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":99:211   */\n    tag_10:\n        /* \"#utility.yul\":182:204   */\n      tag_19\n        /* \"#utility.yul\":198:203   */\n      dup2\n        /* \"#utility.yul\":182:204   */\n      tag_9\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":177:180   */\n      dup3\n        /* \"#utility.yul\":170:205   */\n      mstore\n        /* \"#utility.yul\":99:211   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":217:316   */\n    tag_11:\n        /* \"#utility.yul\":269:275   */\n      0x00\n        /* \"#utility.yul\":303:308   */\n      dup2\n        /* \"#utility.yul\":297:309   */\n      mload\n        /* \"#utility.yul\":287:309   */\n      swap1\n      pop\n        /* \"#utility.yul\":217:316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":322:491   */\n    tag_12:\n        /* \"#utility.yul\":406:417   */\n      0x00\n        /* \"#utility.yul\":440:446   */\n      dup3\n        /* \"#utility.yul\":435:438   */\n      dup3\n        /* \"#utility.yul\":428:447   */\n      mstore\n        /* \"#utility.yul\":480:484   */\n      0x20\n        /* \"#utility.yul\":475:478   */\n      dup3\n        /* \"#utility.yul\":471:485   */\n      add\n        /* \"#utility.yul\":456:485   */\n      swap1\n      pop\n        /* \"#utility.yul\":322:491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:743   */\n    tag_13:\n        /* \"#utility.yul\":578:579   */\n      0x00\n        /* \"#utility.yul\":588:701   */\n    tag_23:\n        /* \"#utility.yul\":602:608   */\n      dup4\n        /* \"#utility.yul\":599:600   */\n      dup2\n        /* \"#utility.yul\":596:609   */\n      lt\n        /* \"#utility.yul\":588:701   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":687:688   */\n      dup1\n        /* \"#utility.yul\":682:685   */\n      dup3\n        /* \"#utility.yul\":678:689   */\n      add\n        /* \"#utility.yul\":672:690   */\n      mload\n        /* \"#utility.yul\":668:669   */\n      dup2\n        /* \"#utility.yul\":663:666   */\n      dup5\n        /* \"#utility.yul\":659:670   */\n      add\n        /* \"#utility.yul\":652:691   */\n      mstore\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":621:622   */\n      dup2\n        /* \"#utility.yul\":617:627   */\n      add\n        /* \"#utility.yul\":612:627   */\n      swap1\n      pop\n        /* \"#utility.yul\":588:701   */\n      jump(tag_23)\n    tag_25:\n        /* \"#utility.yul\":735:736   */\n      0x00\n        /* \"#utility.yul\":726:732   */\n      dup5\n        /* \"#utility.yul\":721:724   */\n      dup5\n        /* \"#utility.yul\":717:733   */\n      add\n        /* \"#utility.yul\":710:737   */\n      mstore\n        /* \"#utility.yul\":559:743   */\n      pop\n        /* \"#utility.yul\":497:743   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":749:851   */\n    tag_14:\n        /* \"#utility.yul\":790:796   */\n      0x00\n        /* \"#utility.yul\":841:843   */\n      0x1f\n        /* \"#utility.yul\":837:844   */\n      not\n        /* \"#utility.yul\":832:834   */\n      0x1f\n        /* \"#utility.yul\":825:830   */\n      dup4\n        /* \"#utility.yul\":821:835   */\n      add\n        /* \"#utility.yul\":817:845   */\n      and\n        /* \"#utility.yul\":807:845   */\n      swap1\n      pop\n        /* \"#utility.yul\":749:851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":857:1234   */\n    tag_15:\n        /* \"#utility.yul\":945:948   */\n      0x00\n        /* \"#utility.yul\":973:1012   */\n      tag_28\n        /* \"#utility.yul\":1006:1011   */\n      dup3\n        /* \"#utility.yul\":973:1012   */\n      tag_11\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":1028:1099   */\n      tag_29\n        /* \"#utility.yul\":1092:1098   */\n      dup2\n        /* \"#utility.yul\":1087:1090   */\n      dup6\n        /* \"#utility.yul\":1028:1099   */\n      tag_12\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":1021:1099   */\n      swap4\n      pop\n        /* \"#utility.yul\":1108:1173   */\n      tag_30\n        /* \"#utility.yul\":1166:1172   */\n      dup2\n        /* \"#utility.yul\":1161:1164   */\n      dup6\n        /* \"#utility.yul\":1154:1158   */\n      0x20\n        /* \"#utility.yul\":1147:1152   */\n      dup7\n        /* \"#utility.yul\":1143:1159   */\n      add\n        /* \"#utility.yul\":1108:1173   */\n      tag_13\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":1198:1227   */\n      tag_31\n        /* \"#utility.yul\":1220:1226   */\n      dup2\n        /* \"#utility.yul\":1198:1227   */\n      tag_14\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":1193:1196   */\n      dup5\n        /* \"#utility.yul\":1189:1228   */\n      add\n        /* \"#utility.yul\":1182:1228   */\n      swap2\n      pop\n        /* \"#utility.yul\":949:1234   */\n      pop\n        /* \"#utility.yul\":857:1234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1240:1655   */\n    tag_7:\n        /* \"#utility.yul\":1377:1381   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x40\n        /* \"#utility.yul\":1404:1413   */\n      dup3\n        /* \"#utility.yul\":1400:1418   */\n      add\n        /* \"#utility.yul\":1392:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1428:1495   */\n      tag_33\n        /* \"#utility.yul\":1492:1493   */\n      0x00\n        /* \"#utility.yul\":1481:1490   */\n      dup4\n        /* \"#utility.yul\":1477:1494   */\n      add\n        /* \"#utility.yul\":1468:1474   */\n      dup6\n        /* \"#utility.yul\":1428:1495   */\n      tag_10\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1542:1551   */\n      dup2\n        /* \"#utility.yul\":1536:1540   */\n      dup2\n        /* \"#utility.yul\":1532:1552   */\n      sub\n        /* \"#utility.yul\":1527:1529   */\n      0x20\n        /* \"#utility.yul\":1516:1525   */\n      dup4\n        /* \"#utility.yul\":1512:1530   */\n      add\n        /* \"#utility.yul\":1505:1553   */\n      mstore\n        /* \"#utility.yul\":1570:1648   */\n      tag_34\n        /* \"#utility.yul\":1643:1647   */\n      dup2\n        /* \"#utility.yul\":1634:1640   */\n      dup5\n        /* \"#utility.yul\":1570:1648   */\n      tag_15\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1562:1648   */\n      swap1\n      pop\n        /* \"#utility.yul\":1240:1655   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220074051fc6b6860ce824800189fcbb4459997659e554a0e3765609bcff3ef18c764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101ab806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634df7e3d014610030575b600080fd5b61003861004f565b604051610046929190610145565b60405180910390f35b6000606060006005905060006040518060400160405280600481526020017f7373737300000000000000000000000000000000000000000000000000000000815250905050509091565b600060ff82169050919050565b6100af81610099565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156100ef5780820151818401526020810190506100d4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610117826100b5565b61012181856100c0565b93506101318185602086016100d1565b61013a816100fb565b840191505092915050565b600060408201905061015a60008301856100a6565b818103602083015261016c818461010c565b9050939250505056fea2646970667358221220074051fc6b6860ce824800189fcbb4459997659e554a0e3765609bcff3ef18c764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46 SWAP3 SWAP2 SWAP1 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7373737300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF DUP2 PUSH2 0x99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP3 PUSH2 0xB5 JUMP JUMPDEST PUSH2 0x121 DUP2 DUP6 PUSH2 0xC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x131 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x13A DUP2 PUSH2 0xFB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x16C DUP2 DUP5 PUSH2 0x10C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD BLOCKHASH MLOAD 0xFC PUSH12 0x6860CE824800189FCBB44599 SWAP8 PUSH6 0x9E554A0E3765 PUSH1 0x9B 0xCF RETURN 0xEF XOR 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "61:143:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@b_17": {
									"entryPoint": 79,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint8_t_string_memory_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1658:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "50:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "75:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "82:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "71:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "60:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "42:7:1",
														"type": ""
													}
												],
												"src": "7:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "160:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "177:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "198:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "182:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "182:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "170:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "148:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "155:3:1",
														"type": ""
													}
												],
												"src": "99:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "276:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "287:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "303:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "297:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "287:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "259:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "269:6:1",
														"type": ""
													}
												],
												"src": "217:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "418:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "435:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "440:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "428:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "475:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "480:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "456:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "390:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "395:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "406:11:1",
														"type": ""
													}
												],
												"src": "322:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "559:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "569:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "578:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "573:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "638:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "663:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "668:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "659:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "659:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "682:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "687:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "678:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "678:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "672:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "672:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "652:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "652:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "652:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "599:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "602:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "596:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "610:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "612:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "621:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "624:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "617:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "617:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "612:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "592:3:1",
																"statements": []
															},
															"src": "588:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "721:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "726:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "717:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "717:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "710:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "541:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "546:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "551:6:1",
														"type": ""
													}
												],
												"src": "497:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "797:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "807:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "825:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "832:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "821:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "841:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "837:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "837:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "780:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "790:6:1",
														"type": ""
													}
												],
												"src": "749:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "959:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1006:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "973:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "963:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1021:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1087:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1092:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1028:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1028:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1147:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1143:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1143:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1161:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1166:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1108:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1108:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1182:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1193:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1220:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1198:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1198:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1189:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1182:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "930:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "945:3:1",
														"type": ""
													}
												],
												"src": "857:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1382:273:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1392:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1468:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1481:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1492:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1428:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1428:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1516:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1527:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1512:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1512:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1536:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1532:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1505:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1505:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1562:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1643:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1570:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1562:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_string_memory_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1346:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1358:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1366:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1377:4:1",
														"type": ""
													}
												],
												"src": "1240:415:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint8_t_string_memory_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80634df7e3d014610030575b600080fd5b61003861004f565b604051610046929190610145565b60405180910390f35b6000606060006005905060006040518060400160405280600481526020017f7373737300000000000000000000000000000000000000000000000000000000815250905050509091565b600060ff82169050919050565b6100af81610099565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156100ef5780820151818401526020810190506100d4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610117826100b5565b61012181856100c0565b93506101318185602086016100d1565b61013a816100fb565b840191505092915050565b600060408201905061015a60008301856100a6565b818103602083015261016c818461010c565b9050939250505056fea2646970667358221220074051fc6b6860ce824800189fcbb4459997659e554a0e3765609bcff3ef18c764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DF7E3D0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46 SWAP3 SWAP2 SWAP1 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7373737300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF DUP2 PUSH2 0x99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP3 PUSH2 0xB5 JUMP JUMPDEST PUSH2 0x121 DUP2 DUP6 PUSH2 0xC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x131 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x13A DUP2 PUSH2 0xFB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x16C DUP2 DUP5 PUSH2 0x10C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD BLOCKHASH MLOAD 0xFC PUSH12 0x6860CE824800189FCBB44599 SWAP8 PUSH6 0x9E554A0E3765 PUSH1 0x9B 0xCF RETURN 0xEF XOR 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "61:143:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:120;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;115:5;122:13;147:7;157:1;147:11;;169:15;:24;;;;;;;;;;;;;;;;;;;136:65;;81:120;;:::o;7:86:1:-;42:7;82:4;75:5;71:16;60:27;;7:86;;;:::o;99:112::-;182:22;198:5;182:22;:::i;:::-;177:3;170:35;99:112;;:::o;217:99::-;269:6;303:5;297:12;287:22;;217:99;;;:::o;322:169::-;406:11;440:6;435:3;428:19;480:4;475:3;471:14;456:29;;322:169;;;;:::o;497:246::-;578:1;588:113;602:6;599:1;596:13;588:113;;;687:1;682:3;678:11;672:18;668:1;663:3;659:11;652:39;624:2;621:1;617:10;612:15;;588:113;;;735:1;726:6;721:3;717:16;710:27;559:184;497:246;;;:::o;749:102::-;790:6;841:2;837:7;832:2;825:5;821:14;817:28;807:38;;749:102;;;:::o;857:377::-;945:3;973:39;1006:5;973:39;:::i;:::-;1028:71;1092:6;1087:3;1028:71;:::i;:::-;1021:78;;1108:65;1166:6;1161:3;1154:4;1147:5;1143:16;1108:65;:::i;:::-;1198:29;1220:6;1198:29;:::i;:::-;1193:3;1189:39;1182:46;;949:285;857:377;;;;:::o;1240:415::-;1377:4;1415:2;1404:9;1400:18;1392:26;;1428:67;1492:1;1481:9;1477:17;1468:6;1428:67;:::i;:::-;1542:9;1536:4;1532:20;1527:2;1516:9;1512:18;1505:48;1570:78;1643:4;1634:6;1570:78;:::i;:::-;1562:86;;1240:415;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "85400",
								"executionCost": "135",
								"totalCost": "85535"
							},
							"external": {
								"b()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 204,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220074051fc6b6860ce824800189fcbb4459997659e554a0e3765609bcff3ef18c764736f6c63430008110033",
									".code": [
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "4DF7E3D0"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 204,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 115,
											"end": 120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 135,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 147,
											"end": 154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 158,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 147,
											"end": 158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 169,
											"end": 193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "PUSH",
											"source": 0,
											"value": "7373737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 169,
											"end": 193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 169,
											"end": 193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 93,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7,
											"end": 93,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 42,
											"end": 49,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 86,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 75,
											"end": 80,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 71,
											"end": 87,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 60,
											"end": 87,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 60,
											"end": 87,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 93,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 211,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 99,
											"end": 211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 198,
											"end": 203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 182,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 182,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 182,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 170,
											"end": 205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 99,
											"end": 211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 99,
											"end": 211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 217,
											"end": 316,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 217,
											"end": 316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 269,
											"end": 275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 297,
											"end": 309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 217,
											"end": 316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 217,
											"end": 316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 217,
											"end": 316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 217,
											"end": 316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 322,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 322,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 406,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 435,
											"end": 438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 428,
											"end": 447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 480,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 471,
											"end": 485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 322,
											"end": 491,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 322,
											"end": 491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 322,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 322,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 322,
											"end": 491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 743,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 497,
											"end": 743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 608,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 588,
											"end": 701,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 588,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 588,
											"end": 701,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 687,
											"end": 688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 682,
											"end": 685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 678,
											"end": 689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 672,
											"end": 690,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 659,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 652,
											"end": 691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 612,
											"end": 627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 612,
											"end": 627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 588,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 701,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 588,
											"end": 701,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 588,
											"end": 701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 721,
											"end": 724,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 717,
											"end": 733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 559,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 851,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 749,
											"end": 851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 790,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 837,
											"end": 844,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 821,
											"end": 835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 817,
											"end": 845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 807,
											"end": 845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 807,
											"end": 845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 749,
											"end": 851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 857,
											"end": 1234,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 857,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1006,
											"end": 1011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 973,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 973,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1090,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1028,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1099,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1028,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1099,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1164,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1152,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1108,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1173,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1108,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1198,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1196,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 857,
											"end": 1234,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 857,
											"end": 1234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 857,
											"end": 1234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 857,
											"end": 1234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 857,
											"end": 1234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1655,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1240,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1492,
											"end": 1493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1428,
											"end": 1495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1495,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1428,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 1552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1525,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1643,
											"end": 1647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1570,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1648,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1570,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1655,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"test1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"b()": "4df7e3d0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test1.sol\":\"A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test1.sol\":{\"keccak256\":\"0xbfdceb147f2a6abb9e0ac13d453f1562dce2188978458fd6719a2d577edce17c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b17c6cbab55f3151161bea359419fea3e714ba9e436914f7012188eab9258932\",\"dweb:/ipfs/QmVyvxxzPJMxEAeTTDZV42ZvP4oi5sFxspxYm9WnYKtnTt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n --> test1.sol:6:39:\n  |\n6 |     function b() public pure returns (uint8, string memory){\n  |                                       ^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 120,
					"file": "test1.sol",
					"start": 115
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n --> test1.sol:6:46:\n  |\n6 |     function b() public pure returns (uint8, string memory){\n  |                                              ^^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 135,
					"file": "test1.sol",
					"start": 122
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n --> test1.sol:7:9:\n  |\n7 |         uint8 c = 5;\n  |         ^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 154,
					"file": "test1.sol",
					"start": 147
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n --> test1.sol:8:9:\n  |\n8 |         string memory s = \"ssss\";\n  |         ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 184,
					"file": "test1.sol",
					"start": 169
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test1.sol": {
				"ast": {
					"absolutePath": "test1.sol",
					"exportedSymbols": {
						"A": [
							18
						]
					},
					"id": 19,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "A",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "A",
							"nameLocation": "70:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "136:65:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "153:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 16,
														"src": "147:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 8,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"hexValue": "35",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "157:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5_by_1",
														"typeString": "int_const 5"
													},
													"value": "5"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "147:11:0"
											},
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "183:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 16,
														"src": "169:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 12,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "169:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"hexValue": "73737373",
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_41b2a6f08c33b26a8f8a519d56d4de4d195c8ace16e2545125e4bdb373133859",
														"typeString": "literal_string \"ssss\""
													},
													"value": "ssss"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "169:24:0"
											}
										]
									},
									"functionSelector": "4df7e3d0",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "b",
									"nameLocation": "90:1:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "91:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "115:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "122:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "122:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:22:0"
									},
									"scope": 18,
									"src": "81:120:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 19,
							"src": "61:143:0",
							"usedErrors": []
						}
					],
					"src": "33:171:0"
				},
				"id": 0
			}
		}
	}
}